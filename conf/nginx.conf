master_process on;
worker_processes auto;
worker_cpu_affinity auto;

error_log logs/error.log debug;
# error_log logs/error.log warn;

http {
  lua_code_cache off;

  log_format main '$http_x_forwarded_for - $remote_addr - $remote_user [$time_local] $http_host "$request" $status $body_bytes_sent $request_time "$http_referer" "$http_user_agent"';

  access_log logs/access.log main;

  lua_package_path "$prefix/lua/?.lua;$prefix/lua/vendor/?.lua;;";

  init_by_lua_block {
     -- preload Lua modules
     require "server"
  }

  server {
    listen 8080;

    default_type text/plain;
    include mime.types;
    charset utf-8;
    gzip on;
    gzip_min_length 1k;
    gzip_buffers 4 16k;
    gzip_http_version 1.0;
    gzip_comp_level 2;
    gzip_types text/plain application/x-javascript text/css application/xml application/pdf;

    location /js {
      expires 1d;
      alias web/js;
    }

    location / {
      default_type text/html;

      content_by_lua_block {
        require("server").bootstrap()
      }
    }
  }
}

events {
  # worker_connections 1024;
  accept_mutex off;
}
